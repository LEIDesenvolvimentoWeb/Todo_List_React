// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Data;

#nullable disable

namespace ToDoList.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220614205211_MudarFotografiaParaFicheiro")]
    partial class MudarFotografiaParaFicheiro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDoList.Models.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataParaConcluir")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ficheiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("ToDo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2022, 6, 14, 21, 52, 11, 144, DateTimeKind.Local).AddTicks(1048),
                            DataParaConcluir = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Fazer a aplicação de Adoções",
                            TipoId = 1,
                            Titulo = "Trabalho de MVC"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2022, 6, 14, 21, 52, 11, 144, DateTimeKind.Local).AddTicks(1058),
                            DataParaConcluir = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Fazer o FE com a api ToDo",
                            TipoId = 1,
                            Titulo = "Trabalho de React"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2022, 6, 14, 21, 52, 11, 144, DateTimeKind.Local).AddTicks(1068),
                            DataParaConcluir = new DateTime(2022, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Ficha número 3",
                            TipoId = 1,
                            Titulo = "Trabalho de Redes"
                        },
                        new
                        {
                            Id = 4,
                            DataConclusao = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2022, 6, 14, 21, 52, 11, 144, DateTimeKind.Local).AddTicks(1076),
                            DataParaConcluir = new DateTime(2022, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Ficha número 8",
                            TipoId = 1,
                            Titulo = "Fichas de Base de Dados"
                        },
                        new
                        {
                            Id = 5,
                            DataConclusao = new DateTime(2022, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2022, 6, 14, 21, 52, 11, 144, DateTimeKind.Local).AddTicks(1085),
                            DataParaConcluir = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Ficha número 4",
                            TipoId = 1,
                            Titulo = "Fichas de Sistemas Operativos"
                        });
                });

            modelBuilder.Entity("ToDoList.Models.ToDoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToDoType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Escola"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Trabalhos"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Outros"
                        });
                });

            modelBuilder.Entity("ToDoList.Models.ToDo", b =>
                {
                    b.HasOne("ToDoList.Models.ToDoType", "Tipo")
                        .WithMany("ToDoLista")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ToDoList.Models.ToDoType", b =>
                {
                    b.Navigation("ToDoLista");
                });
#pragma warning restore 612, 618
        }
    }
}
